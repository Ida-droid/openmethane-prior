[project]
name = "openmethane_prior"
version = "0.0.1"
authors = [
  { name="Placeholder Author", email="placeholder@example.com" },
]
description = "Method to calculate a gridded, prior emissions estimate for methane across Australia."
readme = "README.md"
requires-python = ">=3.10, <3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.ruff]
src = ["."] # TODO: change if using a common src/ directory
target-version = "py311"
# Provide some leeway for long docstring
line-length = 100


[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D100",  # Missing docstring in public module
    "D105",  # Missing docstring in magic methods
    "D106",  # Missing docstring in public nested class
    "D400",  # First line should end with a period
    "TRY003",  # Avoid specifying long messages outside the exception class
    "PD011", #  Use `.to_numpy()` instead of `.values`
]

[tool.ruff.lint.per-file-ignores]
"test*.py" = [
    "D",  # Documentation not needed in tests
    "S101",  # S101 Use of `assert` detected
    "PLR2004" # Magic value used in comparison
]

[tool.ruff.lint.isort]
known-first-party = ["src"]
